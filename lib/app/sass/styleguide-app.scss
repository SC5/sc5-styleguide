$fa-font-path: '{{{appRoot}}}/assets/fonts';
@import 'components/font-awesome/font-awesome';
@import 'bourbon';

@mixin styleguide_custom_styles {
  // User can re-define this mixin to create custom style overrides
  // This mixin is included in the end of the application stylesheet
}

@import 'styleguide_custom_variables';
@import 'styleguide_variables';
@import 'styleguide_mixins';
@import 'styleguide_helper_elements';

@import 'components/colorpicker';
@import 'components/github';

$footer-padding: 2em;
$footer-logo-height: 42px;
$wrapper-vertical-padding: 60px;

html,
body.sg {
  width: 100%;
  height: 100%;
}

.sg.sg-view-index {
  height: 100%;
}

.sg {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  border: 0;
}

// Colors and typography
//
// This section describes base colors and typography
//
// Styleguide 1.0

// Main colors
//
// $primary-color - Primary color
// $secondary-color - Secondary color
// $primary-action-color - Primary button color
// $default-action-color - Default button color and link color
// $tertiary-color - Used for input hovers and hilights
//
// markup:
// <div style="background: {$modifiers};" class="styleguide-color">{$modifiers}</div>
//
// Styleguide 1.1

// Calculated colors
//
// .color_lighten - Lighter than default action color
// .color_darken - Darker than default action color
//
// markup:
// <div class="styleguide-color {$modifiers}"></div>
//
// Styleguide 1.1.1

$default-action-light: lighten($default-action-color, $action-color-change);

.color_lighten {
  background-color: $default-action-light;
}

$default-action-dark: darken($default-action-color, $action-color-change);

.color_darken {
  background-color: $default-action-dark;
}

// Headings
//
// These are our headings
//
// markup:
// <h1 class="sg">Heading 1</h1>
// <p class="sg">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque massa ipsum, tincidunt vel convallis in, suscipit et risus. Morbi erat dolor, mattis at dignissim sed, feugiat sed lorem.
// <h2 class="sg">Heading 2</h2>
// <p class="sg">Mauris feugiat suscipit turpis, ut rhoncus lectus finibus sed. Etiam suscipit consectetur eros vitae venenatis.</p>
// <h3 class="sg">Heading 3</h3>
// <p class="sg">Ut leo ipsum, tincidunt vel mauris eget, convallis egestas justo. Nunc ligula neque, porta ac lorem id, ultrices dapibus dolor.</p>
// <h4 class="sg">Heading 4</h4>
// <p class="sg"> Phasellus interdum massa ante, ac placerat felis ultricies at. Fusce vulputate, odio sed convallis laoreet, tortor orci venenatis massa, a placerat ligula nisl vitae felis. In pellentesque ornare eleifend. Suspendisse potenti. Quisque eget mauris enim.</p>
// <h5 class="sg">Heading 5</h5>
//
// Styleguide 1.2

h1.sg,
h2.sg,
h3.sg,
h4.sg,
h5.sg {
  @include default-font;
  font-family: $primary-font;
  font-weight: normal;
  font-style: normal;
  line-height: 1.2;
  margin: 1.414em 0 .5em;
  color: #444;
}

h1.sg {
  font-size: 3.157em;

  margin-top: .5em;
}

h2.sg {
  font-size: 2.369em;
}

h3.sg {
  font-size: 1.777em;
}

h4.sg {
  font-size: 1.333em;
}

h4.sg,
h5.sg {
  font-weight: 500;
}

// Buttons and inputs
//
// Links, buttons, input boxes etc.
//
// Styleguide 2.0

// Links
//
// Link styles used in the styleguide
//
// .sg - Normal link
// :hover - Hover
// :active - Active
// :visited - Visited
//
// markup:
// <a href="#" class="sg {$modifiers}">Link text</a>
//
// Styleguide 2.1

a.sg {
  @include default-font;
  display: inline;
  cursor: pointer;
  text-decoration: none;
  color: $default-action-color;
}

a.sg:hover {
  color: $default-action-light;
}

a.sg:active {
  color: $default-action-dark;
}

p.sg {
  @include default-font;
  line-height: 1.5em;
  margin-top: 1.3em;
  margin-bottom: 1.3em;
  color: rgba(#333, 1);
}

code.sg,
pre.sg {
  @include default-font;
  font-family: 'Lucida Console', Monaco, monospace;
  font-size: 1.0em;
  white-space: pre-wrap;
}

li.sg {
  @include default-font;
  margin-left: 1em;
  padding: .2em 0;
}

strong.sg {
  @include default-font;
  font-weight: 700;
}

small.sg {
  @include default-font;
  color: #888;
}
// Buttons
//
// Button styles used in the styleguide
//
// default - Default button
// .sg-primary - Primary button
// :disabled - Disabled button
//
// markup:
// <button class="sg {$modifiers}">Button text</button>
//
// Styleguide 2.3

button.sg {
  @include default-font;
  display: inline;

  margin-right: 8px;
  padding: 8px;

  cursor: pointer;

  color: white;
  border-radius: 5px;
  background-color: $default-action-color;

  &:hover {
    background-color: lighten($default-action-color, $action-color-change);
  }
  &:active {
    background-color: darken($default-action-color, $action-color-change);
  }

  &.sg-primary {
    color: white;
    background-color: $primary-action-color;
    &:hover {
      background-color: lighten($primary-action-color, $action-color-change);
    }
    &:active {
      background-color: darken($primary-action-color, $action-color-change);
    }
  }

  &:disabled {
    cursor: default;

    color: #999;
    background-color: $secondary-color;
  }
}

// Input boxes
//
// Styles for input boxes
//
// default - Default input
// :hover - Hovered input
// :focus - Focused input
// :active - Active input
//
// markup:
// <input class="sg {$modifiers}" type="text" value="Default text box">
// <input class="sg {$modifiers}" type="text" placeholder="Default placeholder">
// <input class="sg {$modifiers}" type="search" value="Search text box">
//
// Styleguide 2.4

input.sg {
  @include default-font;
  font-family: $secondary-font;
  font-weight: 300;

  margin: 8px;
  padding: 8px;
  padding: .5em;

  border: 1px solid $secondary-color;

  &:focus {
    background-color: $tertiary-color;
    border: 1px solid $secondary-color;
  }
}

// Structure
//
// Styleguide 3.0

// Grid
//
// Our grid is built using Bourbon's Neat grid framework. We use the default
// 12 column layout.
//
// Styleguide 3.1

// Main layout
//
// .sg.wrapper acts as a container for .sg.nav and .sg.body
//
// markup:
// <header class="sg-header styleguide-grid-unit">Header</header>
// <div class="sg-inner wrapper styleguide-grid-unit">
//   <div class="sg-body styleguide-grid-unit">Body</div>
// </div>
//
// Styleguide 3.1.1

.sg.sg-wrapper {
  position: relative;
  padding: $wrapper-vertical-padding $content-margin $wrapper-vertical-padding $min-content-margin;
  max-width: $content-max-width;
  margin-left: auto;
  margin-right: auto;

  &.designerToolVisible {
    margin-right: $designer-tool-width;
  }
}

.sg.full-height {
  min-height: 100vh;
}

.sg.sg-body {
  width: 100%;
  height: 100%;
  @include media($mobile) {
    padding: 0.25em;
  }

  // Remove top margin from first header in markdown
  .sg.sg-heading:nth-of-type(1) {
    margin-top: 0;
    padding-top: 0;
  }
}

// Header and footer
//
// The header and footer are included in all styleguide pages
//
// Styleguide 3.2

// Header
//
// Header bar description
//
// default - Default header
// .error - Error state
//
// markup:
// <header class="sg header {$modifiers}">
//   <div class="inner">
//     <div class="title">
//       <h1>Title</h1>
//     </div>
//   </div>
// </header>
//
// Styleguide 3.2.1

.sg.sg-header {
  width: 100%;
  padding: 0;
  color: rgba(#fff, 1);
  background: $header-background-color;

  pre {
    clear: both;
  }

  .sg-inner {
    box-sizing: border-box;
    padding-top: 20px;
    height: 100%;
    padding-right: $content-margin - $min-content-margin;
    max-width: $content-max-width;
    margin-left: auto;
    margin-right: auto;
    @include media($mobile) {
      padding-right: 0;
    }

    &:after {
      visibility: hidden;
      display: block;
      font-size: 0;
      content: " ";
      clear: both;
      height: 0;
    }
  }

  .sg-title {
    float: left;
    padding-bottom: 20px;
    white-space: nowrap;
    padding-left: $min-content-margin;
    height: 100%;
    line-height: 1.8em;

    h1 {
      font-family: $secondary-font;
      font-style: normal;
      font-size: 1.8em;
      font-weight: 100;
      margin: 0;
      color: $header-text-color;

      span {
        font-size: .9em;
      }
    }
  }

  &.error {
    height: auto;
    background-color: #d2301c;
  }

  &.designerToolVisible .sg-inner {
    margin-right: $designer-tool-width;
  }
}

.sg.sg-search-field {
  box-sizing : border-box;
  float: right;
  margin-top: 0;
  @include media($mobile) {
    margin-left: 0;
    margin-right: 0;
    float: none;
    width: 100%;
  }
}

// Footer
//
// markup:
// <footer class="sg footer">
//  <div class="sg content">
//    <span class="sg">
//      Footer text. <a class="sg" target="_blank" href="http://styleguide.sc5.io/">Footer link</a>.
//    </span>
//  </div>
// </footer>
//
// Styleguide 3.2.2

.sg.sg-footer {
  @include default-font;
  box-sizing: border-box;
  font-weight: 300;

  padding: $footer-padding;

  text-align: center;
  border-top: 2px solid #333;
  margin: 0 20px 0 20px;
  background: #FFF;
}

.sg.sg-footer .sg-logo {
  width: 42px;
  height: $footer-logo-height;
  margin-top: -5px;

  vertical-align: middle;
}

// Navigation
//
// Navigation provides navigation menu between different sections
//
// markup:
// <ul class="sg top-nav-menu">
//   <li>
//     <a><span class="ref">1.0</span> First section</a>
//   </li>
//   <li>
//     <a><span class="ref">2.0</span> Second section</a>
//   </li>
//   <li>
//     <a><span class="ref">3.0</span> Third section</a>
//   </li>
// </ul>
//
// Styleguide 3.3

// Navigation item
//
// default - Default state
// .active - Active item
// :hover - Hover
//
// markup:
// <li>
//   <a class="{$modifiers}"><span class="ref">1.0</span> First section</a>
// </li>
//
// sg-wrapper:
// <ul class="sg top-nav-menu">
// <sg-wrapper-content/>
// </ul>
//
// Styleguide 3.3.1

.sg.sg-top-nav {
  clear: both;
  background-color: $nav-background-color;
  z-index: 8000;
  width: 100%;
}

.sg.sg-top-nav-menu {
  padding: 0;
  margin: 0;
  max-width: $content-max-width;
  margin-left: auto;
  margin-right: auto;
  list-style-type: none;

  .designerToolVisible & {
    margin-right: $designer-tool-width;
  }

  li {
    @include default-font;
    background-color: $nav-button-color;
    float:left;
  }
  li a {
    padding: 0 20px;
    display: block;
    text-decoration: none;
  }
  & > li > a {
    color: $nav-button-text-color;

    &:hover, &.active {
      color: $active-nav-button-text-color;
      background: $active-nav-button-color;
    }
    line-height: $menu-height;
    .sg-ref {
      color: $nav-button-ref-color;
    }
  }

  /* Submenu */
  ul {
    z-index: 8000;
    position: absolute;
    left: -9999px;
    top: -9999px;
    list-style-type: none;
  }
  li:hover {
    position:relative;
    // Button should still have background color when sub-menu item is hovered
    & > a {
      color: $active-nav-button-text-color;
      background: $active-nav-button-color;
    }
    ul {
      left: 0px;
      top: $menu-height;
      padding: 0px;
    }
    .sg-ref {
      color: $active-nav-button-ref-color;
    }
  }

  li:hover ul li a, li ul li a.active {
    background: $nav-item-color;
    color: $nav-item-text-color;
    padding-top: 5px;
    padding-bottom: 5px;
    display: block;
    width: 260px;
    border-top: 1px solid white;
    .sg-ref {
      color: $nav-item-ref-color;
    }
  }

  a:hover, a.active, li:hover ul li a:hover, li ul li a.active {
    background: $active-nav-button-color;
    color: $active-nav-button-text-color;
    .sg-ref {
      color: $active-nav-button-ref-color;
    }
  }

  @include media($mobile) {
    li {
      float: none;
    }
  }

  &:after {
    visibility: hidden;
    display: block;
    font-size: 0;
    content: " ";
    clear: both;
    height: 0;
  }
}

.sg.toggle {
  font-family: $secondary-font;
  font-weight: 300;

  cursor: pointer;

  color: rgba($secondary-color, 1);

  &.all-markup {
    margin: 0;
    padding: 1em;
  }
  &.hide-markup {
    position: absolute;
    top: 0;
    right: 0;

    padding: 1em;
  }
  &.show-markup {
    display: block;

    padding: 0;
  }
}

// Sections header
//
// Sections can be used to structure content. Sections are generated from
// KSS reference numbers.
//
// Markup:
// <header class="sg section-header">
//   <h1 class="sg"><span class="reference-number">1.0</span> Section title </h1>
// </header>
//
// Styleguide 3.4.

.sg.sg-section-header {
  @include default-font;
  background-color: $section-header-color;
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;

  a {
    text-decoration: none;
    display: block;
  }

  a:hover {
    i.fa {
      color: rgba($secondary-color, 1);
    }
  }

  h1 {
    color: $section-header-text-color;
    padding: 13px;
    margin: 0;
    font-size: 1.777em;

    .sg-reference-number {
      color: $section-header-ref-color;
    }

    .sg-section-source {
      float: right;
      color: $section-header-source-text-color;
      font-size: 60%;
      line-height: 1.777em;
    }
  }

  i.fa {
    font-size: 14px;
    padding: 0.4em 0.7em;
    float: right;
    color: rgba($section-header-text-color, .6);
    @include transition(all .4s ease-out);
  }

  // Active header styles
  .sg.designerToolVisible .sg.section.active:not(.main) & {
    background-color: $active-section-header-color;
    h1 {
      color: $active-section-header-text-color;
      .sg-reference-number {
        color: $active-section-header-ref-color;
      }

      .sg-section-source {
        color: $active-section-header-source-text-color;
      }
    }
    i.fa {
      color: rgba($active-section-header-text-color, .6);
    }
  }

}

.sg.sg-section.main {
  .sg-section-header {
    background-color: transparent;

    h1 {
      padding-top: 0;
      font-size: 2.369em;
      color: #333;
    }

    i.fa {
      display: none;
    }
  }

  .sg-reference-number {
    display: none;
  }

  .sg.sg-section-partial, .sg.sg-section-partial:last-child {
    padding-top: 0;
    padding-bottom: 0;
    border: none;
  }
}

// Sections blocks
//
// Sections can be used to structure content. Sections are generated from
// KSS reference numbers.
//
// Markup:
// <secion class="sg section">
//   <div class="sg section-partial">
//     <p class="sg">Section description</p>
//     <ul class="sg modifier-list">
//       <li class="item"><strong>.modifier1</strong> - <span>Modifier1 description</span></li>
//       <li class="item"><strong>.modifier2</strong> - <span>Modifier2 description</span></li>
//       <li class="item"><strong>.modifier3</strong> - <span>Modifier3 description</span></li>
//     </ul>
//   </div>
//   <div class="sg section-partial">
//     <div class="sg label">
//       <a ng-href="0.0.0-0/fullscreen" target="_blank">
//         <span class="sg name">.modifier1</span><i class="fa fa-arrows-alt"></i>
//       </a>
//     </div>
//     <div>
//       <div style="width: 100px; height: 100px; background: #1695A3;"></div>
//     </div>
//   </div>
//   <div class="sg section-partial">
//     <div class="sg label">
//       <a ng-href="0.0.0-1/fullscreen" target="_blank">
//         <span class="sg name">.modifier2</span><i class="fa fa-arrows-alt"></i>
//       </a>
//     </div>
//     <div>
//       <div style="width: 100px; height: 100px; background: #ACF0F2;"></div>
//     </div>
//   </div>
//   <div class="sg section-partial">
//     <div class="sg label">
//       <a ng-href="0.0.0-2/fullscreen" target="_blank">
//         <span class="sg name">.modifier3</span><i class="fa fa-arrows-alt"></i>
//       </a>
//     </div>
//     <div>
//       <div style="width: 100px; height: 100px; background: #EB7F00;"></div>
//     </div>
//   </div>
//   <div class="sg section-partial code-listing">
//     <div class="sg label">
//       <a target="_blank">
//         <i class="fa fa-close"></i>
//       </a>
//     </div>
//     <pre class="sg">
//       <code hljs class="html"><div style="width: 100px; height: 100px; background: {$modifier};"></div></code>
//     </pre>
//   </div>
// </div>
//
// Styleguide 3.5.

.sg.sg-section {
  margin-bottom: 20px;

  .sg.sg-section-partial {
    position: relative;

    overflow: auto;

    padding: 1em;

    border: 1px solid $secondary-color;
    border-bottom: none;
    background: rgba(#fff, 1);
  }

  .sg.sg-section-partial:last-child {
    border-bottom: 1px solid $secondary-color;
  }

  .sg.sg-code-listing {
    padding: 0;
    background-color: #f8f8f8;

    pre {
      padding: 1em;
    }

    .hljs {
      overflow-y: auto;

      max-height: 400px;
    }

    a.sg-show-section {
      display: block;

      padding: .8em 1.2em;

      cursor: pointer;
    }
  }
  .sg.modifier-list {
    @include default-font;
    list-style: none;
    padding: 1em;
    > .sg-item {
      line-height: 1.8em;
      > strong {
        font-weight: bold;
      }
    }
  }
}

.sg.sg-body section.sg.sg-section:last-of-type {
  margin-bottom: 0;
  min-height: calc(100vh - #{$header_height} - #{$footer-logo-height} - #{$wrapper-vertical-padding});
}

.sg.designerToolVisible .sg.sg-section.active:not(.main) .sg.sg-section-header {
  background-color: lighten($primary-color, 17%);
}

.sg.sg-label {
  @include default-font;
  position: absolute;
  z-index: 7000;
  top: 0;
  right: 0;

  border: 1px solid $secondary-color;
  border-top: none;
  border-right: none;
  background: rgba(#fff, .9);

  span,
  p {
    @include default-font;
    font-weight: 500;

    display: inline;

    padding: 0 .8em 0 0;

    text-decoration: none;
  }

  a {
    @include default-font;
    display: inline-block;

    padding: .4em .7em;

    cursor: pointer;
    text-decoration: none;
  }

  a:hover {
    i.fa {
      color: rgba($primary-color, .7);
      &:after {
        opacity: 1;
      }
    }
  }

  i.fa {
    cursor: pointer;

    color: rgba($primary-color, .2);

    @include transition(all .4s ease-out);
  }
}

// Variable sections header
//
// Header for listing all sections which use the selected variable
//
// markup:
// <h2 class="sg heading">
//   Sections using variable
//   <span class="sg current-variable">variable name</span>
// </h2>
//
// Styleguide 3.6.

.sg.sg-heading .sg-current-variable {
  display: inline;
  color: #009926;
  font-weight: 700;
}

// Designer tool
//
// Styles for styleguide designer tool
//
// Styleguide 4.0

// Variable listing
//
// markup:
// <div class="sg sg-design-content" ng-init="variables = [
//      {name: 'example-variable', value: '#00FF00', 'file': 'filename.scss'},
//      {name: 'edited-variable', value: '#FF0000', 'file': 'filename.scss', dirty: true}
//   ]">
//   <h3 class="sg">All variables</h3>
//   <ul>
//     <li ng-repeat="variable in variables">
//       <div sg-variable></div>
//     </li>
//   </ul>
// </div>
//
// Styleguide 4.1

.sg.sg-design {
  position: fixed;
  top: 0;
  left: 100%;

  width: $designer-tool-width;
  height: 100%;

  z-index: 9000;

  @include media($mobile) {
    width: $designer-tool-width-mobile;
  }

  border-left: 1px solid rgba(#000, .3);

  @include transition(left .3s ease-out);

  .sg-handle {
    @include default-font;
    position: absolute;
    top: 220px;
    left: -30px;

    width: 150px;
    height: 30px;
    padding: 5px 10px;

    cursor: pointer;
    text-align: center;

    color: rgba(#000, .4);
    border-top: 1px solid rgba(#000, .3);
    border-right: 1px solid rgba(#000, .3);
    border-left: 1px solid rgba(#000, .3);
    border-radius: 3px 3px 0 0;
    background: rgba(#fff, 1);

    @include transition(left .3s ease-out);
    @include transition-delay(.3s);
    @include transform(rotate(-90deg));
    @include transform-origin(left top);
  }

  .close {
    position: absolute;
    top: 0;
    right: 0;

    padding: 10px;
  }

  &.sg-hidden {
    left: 100%;
  }

  &.sg-visible {
    left: 100% - $designer-tool-width;
    @include media($mobile) {
      left: 100% - $designer-tool-width-mobile;
    }

    .sg-handle {
      left: 0;
    }
  }

  .sg-info-text {
    margin-top: 10px;
  }
}

.sg.sg-design-content {
  @include default-font;
  position: relative;
  z-index: 9000;

  overflow-x: auto;
  overflow-y: auto;

  width: 100%;
  height: 100%;
  padding: 1em;

  background: white;

  ul {
    margin: 0;
    padding: 0;
    list-style: none;
  }

  label {
    display: block;

    i.fa {
      padding-left: 8px;
      color: red;
    }

    a {
      i.fa.fa-eye {
        font-size: 16px;
        padding-left: 4px;
        color: rgba($primary-color, .2);
        @include transition(all .4s ease-out);
      }

      &:hover {
        i.fa.fa-eye {
          color: rgba($primary-color, .8);
        }
      }
    }

    .sg-variable-source {
      display: block;
      opacity: 0.5;
      font-size: 80%;
    }

  }

  input {
    display: inline;
  }

  input[type='text'] {
    box-sizing: border-box;
    width: 100%;
  }

  input[type='color'] {
    background: transparent;
    position: absolute;
    right: 0;

    box-sizing: border-box;
    width: 36px;
    height: 36px;
    padding: 0;

    cursor: pointer;

    border: none;
  }
}


// Action footer
//
// markup:
//   <div class="sg action-footer">
//     <button class="sg button sg-primary">Primary action</button>
//     <button class="sg button sg-secondary">Secondary action</button>
//   </div>
//
// Styleguide 4.2

.sg.sg-action-footer {
  margin-top: 16px;
  margin-bottom: 16px;
  padding-top: 8px;

  border-top: 1px solid $secondary-color;
}

// Progress bar
//
// markup:
// <div id="ngProgress" style="width: 70%; opacity: 1;""></div>
//
// Styleguide 4.3

#ngProgress {
  z-index: 99998;

  height: 4px;
  margin: 0;
  padding: 0;
  /* Add CSS3 styles for transition smoothing */

  -webkit-transition: all .5s ease-in-out;
     -moz-transition: all .5s ease-in-out;
       -o-transition: all .5s ease-in-out;
          transition: all .5s ease-in-out;

  opacity: 0;
  color: $primary-action-color;
  background-color: $primary-action-color;
  box-shadow: 0 0 3px 0; /* Inherits the font color */
}

#ngProgress-container {
  position: fixed;
  z-index: 99999;
  top: 0;
  right: 0;
  left: 0;

  margin: 0;
  padding: 0;
}

/*
Socket disconnection icon

markup:
<div class="sg disconnection-icon" title="no socket connection">
  <i class="fa fa-chain-broken"></i>
</div>

Styleguide 4.4
*/

.sg#socketDisconnection {
  position: fixed;
  z-index: 9100;
  top: 0;
  right: $designer-tool-width + 2%;

  @include transition(top .2s ease-in);
}

.sg#socketDisconnection.ng-hide {
  top: -60px;
}

.sg-navigation-section {
  padding: 10px;
  position: fixed;
  z-index: 99999;
  right: 0;
  @if $navigation-arrows-visible {
    display: inline;
  } @else {
    display: none;
  }
  .next-nav, .prev-nav {
    float: left;
    cursor: pointer;
  }
  .sg-navigation-link,
  .sg-navigation-link:link,
  .sg-navigation-link:visited
  {
    color: $default-action-color;
    text-decoration: none;
  }
}

.sg.disconnection-icon {
  line-height: 32px;

  width: 32px;
  height: 32px;
  padding-top: 3px;

  text-align: center;
  vertical-align: middle;

  color: #fff;
  border-radius: 3px;
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  background-color: #d20000;
  i.fa {
    font-size: 20px;

    @include animation(socket-disconnect-pulse 3s linear infinite);
  }
}

@include keyframes(socket-disconnect-pulse) {
  80% {
    color: rgba(255, 255, 255, 1);
  }
  90% {
    color: rgba(255, 255, 255, .35);
  }
  100% {
    color: rgba(255, 255, 255, 1);
  }
}

// Angular Directives
//
// Example of lazy loaded AngularJS directive from external project
//
// Styleguide 6.0

// Test directive
//
// markup:
// <div sg-test-directive>If you see this something is wrong</div>
//
// sg-angular-directive:
// name: sgAppTest
// file: demo/testDirectiveInit.js
// file: demo/testDirective.js
//
// Styleguide 6.1

.sg.demo-click-area {
  user-select: none;
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
  padding: 0.2em;
  border: 2px solid red;
  display: initial;
  cursor: pointer;
}

// Test directive2
//
// markup:
// <div sg-test-directive-two>If you see this something is wrong</div>
//
// sg-angular-directive:
// name: sgAppTest
// file: demo/testDirectiveInit.js
// file: demo/testDirectiveTwo.js
//
// Styleguide 6.2

// styleguide:ignore:start
@include styleguide_custom_styles;
// styleguide:ignore:end

